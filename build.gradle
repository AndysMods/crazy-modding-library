import net.minecraftforge.gradle.common.util.RunConfig

plugins {
    id 'idea'
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

def setupRunConfig(RunConfig runConfig, String directory = "run") {
    runConfig.workingDirectory(file(directory))
    runConfig.property 'forge.logging.markers', 'REGISTRIES'
    runConfig.property 'forge.logging.console.level', 'debug'
    runConfig.property 'forge.enabledGameTestNamespaces', "${mod_id}"

    runConfig.mods.register("${mod_id}").configure {
        source sourceSets.main
    }
}

def getManifestAttributes(String modName) {
    return [
            "Specification-Title"     : modName,
            "Specification-Vendor"    : "${project.mod_vendor}",
            "Specification-Version"   : "1",
            "Implementation-Title"    : modName,
            "Implementation-Version"  : "${version}",
            "Implementation-Vendor"   : "${project.mod_vendor}",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ]
}

group = "com.${mod_vendor}.${mod_artifact_id}"
archivesBaseName = "${mod_artifact_id}-${minecraft_version}-forge"
version = "${mod_version}"

println "Java: ${System.getProperty 'java.version'}, " +
        "JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), " +
        "Arch: ${System.getProperty 'os.arch'}"

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: "${mappings_channel_name}", version: "${mappings_version}"

    runs {
        client {
            setupRunConfig((RunConfig) it)
            //The below if statements are to add args to your gradle.properties file in user home
            // (DO NOT add them directly to the gradle.properties file for this project)
            // Setting the below properties allows use of your normal Minecraft account in the
            // dev environment including having your skin load. Each property also has a comment
            // explaining what information to set the value to/format it expects
            // One thing to note is because of the caching that goes on, after changing these
            // variables, you need to refresh the project and rerun genIntellijRuns/genEclipseRuns
            if (project.hasProperty('mc_uuid')) {
                // Your uuid without any dashes in the middle
                args '--uuid', project.getProperty('mc_uuid')
            }
            if (project.hasProperty('mc_username')) {
                // Your username/display name, this is the name that shows up in chat
                // Note: This is not your email, even if you have a Mojang account
                args '--username', project.getProperty('mc_username')
            }
            if (project.hasProperty('mc_accessToken')) {
                //Your access token, you can find it in your '.minecraft/launcher_accounts.json' file
                args '--accessToken', project.getProperty('mc_accessToken')
            }
        }

        server {
            setupRunConfig((RunConfig) it)
        }

        gameTestServer {
            setupRunConfig((RunConfig) it)
        }

        data {
            setupRunConfig((RunConfig) it)

            // Specify the mod id for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', "${mod_id}", '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
}

jar {
    manifest.attributes(getManifestAttributes("${mod_readable_name}"))
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}